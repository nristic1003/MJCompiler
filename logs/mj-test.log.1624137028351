INFO  00:57:37,532 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  00:57:37,534 - #1 program
INFO  00:57:37,534 - #4 MJProgram
INFO  00:57:37,534 - #19 const
INFO  00:57:37,534 - #4 char
INFO  00:57:37,534 - #4 ch1
INFO  00:57:37,534 - #7 =
INFO  00:57:37,534 - #29 a
INFO  00:57:37,534 - #8 ,
INFO  00:57:37,534 - #4 ch2
INFO  00:57:37,534 - #7 =
INFO  00:57:37,534 - #29 b
INFO  00:57:37,534 - #9 ;
INFO  00:57:37,534 - #4 int
INFO  00:57:37,535 - #4 x
INFO  00:57:37,535 - #47 [
INFO  00:57:37,535 - #48 ]
INFO  00:57:37,535 - #8 ,
INFO  00:57:37,535 - #4 y
INFO  00:57:37,535 - #8 ,
INFO  00:57:37,535 - #4 X
INFO  00:57:37,535 - #9 ;
INFO  00:57:37,535 - #19 const
INFO  00:57:37,535 - #4 int
INFO  00:57:37,535 - #4 z1
INFO  00:57:37,535 - #7 =
INFO  00:57:37,535 - #5 3
INFO  00:57:37,535 - #8 ,
INFO  00:57:37,535 - #4 z2
INFO  00:57:37,535 - #7 =
INFO  00:57:37,535 - #5 4
INFO  00:57:37,535 - #9 ;
INFO  00:57:37,535 - #17 class
INFO  00:57:37,535 - #4 A
INFO  00:57:37,535 - #12 {
INFO  00:57:37,535 - #13 }
INFO  00:57:37,535 - #19 const
INFO  00:57:37,535 - #4 bool
INFO  00:57:37,535 - #4 flag
INFO  00:57:37,535 - #7 =
INFO  00:57:37,535 - #30 false
INFO  00:57:37,535 - #9 ;
INFO  00:57:37,536 - #17 class
INFO  00:57:37,536 - #4 B
INFO  00:57:37,536 - #25 extends
INFO  00:57:37,536 - #4 A
INFO  00:57:37,536 - #12 {
INFO  00:57:37,536 - #4 int
INFO  00:57:37,536 - #4 xb
INFO  00:57:37,536 - #47 [
INFO  00:57:37,536 - #48 ]
INFO  00:57:37,536 - #9 ;
INFO  00:57:37,536 - #13 }
INFO  00:57:37,536 - #17 class
INFO  00:57:37,536 - #4 C
INFO  00:57:37,536 - #25 extends
INFO  00:57:37,536 - #4 B
INFO  00:57:37,536 - #12 {
INFO  00:57:37,536 - #4 char
INFO  00:57:37,536 - #4 xc
INFO  00:57:37,536 - #9 ;
INFO  00:57:37,536 - #12 {
INFO  00:57:37,536 - #4 int
INFO  00:57:37,536 - #4 getxc
INFO  00:57:37,536 - #10 (
INFO  00:57:37,536 - #11 )
INFO  00:57:37,536 - #12 {
INFO  00:57:37,536 - #3 return
INFO  00:57:37,536 - #5 1
INFO  00:57:37,536 - #9 ;
INFO  00:57:37,536 - #13 }
INFO  00:57:37,536 - #15 void
INFO  00:57:37,536 - #4 foo
INFO  00:57:37,536 - #10 (
INFO  00:57:37,536 - #11 )
INFO  00:57:37,536 - #12 {
INFO  00:57:37,536 - #13 }
INFO  00:57:37,536 - #4 int
INFO  00:57:37,537 - #4 f1
INFO  00:57:37,537 - #10 (
INFO  00:57:37,537 - #4 int
INFO  00:57:37,537 - #4 param1
INFO  00:57:37,537 - #11 )
INFO  00:57:37,537 - #12 {
INFO  00:57:37,537 - #3 return
INFO  00:57:37,537 - #4 param1
INFO  00:57:37,537 - #9 ;
INFO  00:57:37,537 - #13 }
INFO  00:57:37,537 - #15 void
INFO  00:57:37,537 - #4 f2
INFO  00:57:37,537 - #10 (
INFO  00:57:37,537 - #4 int
INFO  00:57:37,537 - #4 params
INFO  00:57:37,537 - #47 [
INFO  00:57:37,537 - #48 ]
INFO  00:57:37,537 - #8 ,
INFO  00:57:37,537 - #4 char
INFO  00:57:37,537 - #4 param2
INFO  00:57:37,537 - #11 )
INFO  00:57:37,537 - #4 int
INFO  00:57:37,537 - #4 f2a
INFO  00:57:37,537 - #9 ;
INFO  00:57:37,537 - #12 {
INFO  00:57:37,537 - #13 }
INFO  00:57:37,537 - #13 }
INFO  00:57:37,537 - #13 }
INFO  00:57:37,537 - #12 {
INFO  00:57:37,537 - #15 void
INFO  00:57:37,537 - #4 main
INFO  00:57:37,537 - #10 (
INFO  00:57:37,537 - #11 )
INFO  00:57:37,537 - #12 {
INFO  00:57:37,537 - #4 y
INFO  00:57:37,537 - #7 =
INFO  00:57:37,537 - #33 %
INFO  00:57:37,537 - #5 2
INFO  00:57:37,537 - #9 ;
INFO  00:57:37,537 - #13 }
INFO  00:57:37,537 - #13 }
