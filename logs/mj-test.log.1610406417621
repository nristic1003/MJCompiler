INFO  00:02:53,431 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  00:02:53,434 - #1 program
INFO  00:02:53,434 - #4 MJProgram
INFO  00:02:53,434 - #4 const
INFO  00:02:53,434 - #4 char
INFO  00:02:53,434 - #4 ch1
INFO  00:02:53,434 - #7 =
INFO  00:02:53,434 - #4 a
INFO  00:02:53,434 - #8 ,
INFO  00:02:53,434 - #4 ch2
INFO  00:02:53,434 - #7 =
INFO  00:02:53,434 - #4 b
INFO  00:02:53,434 - #9 ;
INFO  00:02:53,434 - #4 int
INFO  00:02:53,434 - #4 x
INFO  00:02:53,434 - #8 ,
INFO  00:02:53,435 - #4 y
INFO  00:02:53,435 - #8 ,
INFO  00:02:53,435 - #4 X
INFO  00:02:53,435 - #9 ;
INFO  00:02:53,435 - #4 const
INFO  00:02:53,435 - #4 int
INFO  00:02:53,435 - #4 z1
INFO  00:02:53,435 - #7 =
INFO  00:02:53,435 - #5 3
INFO  00:02:53,435 - #8 ,
INFO  00:02:53,435 - #4 z2
INFO  00:02:53,435 - #7 =
INFO  00:02:53,435 - #5 4
INFO  00:02:53,435 - #9 ;
INFO  00:02:53,435 - #4 class
INFO  00:02:53,435 - #4 A
INFO  00:02:53,435 - #12 {
INFO  00:02:53,435 - #13 }
INFO  00:02:53,435 - #4 const
INFO  00:02:53,435 - #4 bool
INFO  00:02:53,435 - #4 flag
INFO  00:02:53,435 - #7 =
INFO  00:02:53,435 - #4 false
INFO  00:02:53,435 - #9 ;
INFO  00:02:53,435 - #4 class
INFO  00:02:53,435 - #4 B
INFO  00:02:53,435 - #4 extends
INFO  00:02:53,436 - #4 A
INFO  00:02:53,436 - #12 {
INFO  00:02:53,436 - #4 int
INFO  00:02:53,436 - #4 xb
INFO  00:02:53,436 - #9 ;
INFO  00:02:53,436 - #13 }
INFO  00:02:53,436 - #4 class
INFO  00:02:53,436 - #4 C
INFO  00:02:53,436 - #4 extends
INFO  00:02:53,436 - #4 B
INFO  00:02:53,436 - #12 {
INFO  00:02:53,436 - #4 char
INFO  00:02:53,436 - #4 xc
INFO  00:02:53,436 - #9 ;
INFO  00:02:53,436 - #12 {
INFO  00:02:53,436 - #4 int
INFO  00:02:53,436 - #4 getxc
INFO  00:02:53,436 - #10 (
INFO  00:02:53,436 - #11 )
INFO  00:02:53,436 - #12 {
INFO  00:02:53,436 - #3 return
INFO  00:02:53,436 - #5 1
INFO  00:02:53,436 - #9 ;
INFO  00:02:53,436 - #13 }
INFO  00:02:53,436 - #15 void
INFO  00:02:53,436 - #4 foo
INFO  00:02:53,436 - #10 (
INFO  00:02:53,436 - #11 )
INFO  00:02:53,436 - #12 {
INFO  00:02:53,436 - #13 }
INFO  00:02:53,437 - #4 int
INFO  00:02:53,437 - #4 f1
INFO  00:02:53,437 - #10 (
INFO  00:02:53,437 - #4 int
INFO  00:02:53,437 - #4 param1
INFO  00:02:53,437 - #11 )
INFO  00:02:53,437 - #12 {
INFO  00:02:53,437 - #3 return
INFO  00:02:53,437 - #4 param1
INFO  00:02:53,437 - #9 ;
INFO  00:02:53,437 - #13 }
INFO  00:02:53,437 - #15 void
INFO  00:02:53,437 - #4 f2
INFO  00:02:53,437 - #10 (
INFO  00:02:53,437 - #4 int
INFO  00:02:53,437 - #4 params
INFO  00:02:53,437 - #8 ,
INFO  00:02:53,437 - #4 char
INFO  00:02:53,437 - #4 param2
INFO  00:02:53,437 - #11 )
INFO  00:02:53,437 - #4 int
INFO  00:02:53,437 - #4 f2a
INFO  00:02:53,437 - #9 ;
INFO  00:02:53,437 - #12 {
INFO  00:02:53,437 - #13 }
INFO  00:02:53,437 - #13 }
INFO  00:02:53,437 - #13 }
INFO  00:02:53,437 - #12 {
INFO  00:02:53,437 - #15 void
INFO  00:02:53,438 - #4 main
INFO  00:02:53,438 - #10 (
INFO  00:02:53,438 - #11 )
INFO  00:02:53,438 - #12 {
INFO  00:02:53,438 - #4 y
INFO  00:02:53,438 - #7 =
INFO  00:02:53,438 - #5 2
INFO  00:02:53,438 - #9 ;
INFO  00:02:53,438 - #13 }
INFO  00:02:53,438 - #13 }
