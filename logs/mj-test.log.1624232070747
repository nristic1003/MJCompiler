INFO  23:10:28,353 - Compiling source file: C:\Users\Nikola\OneDrive - student.etf.bg.ac.rs\Documents\GitHub\PP1\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:10:28,361 - #2 program
INFO  23:10:28,361 - #50 MJProgram
INFO  23:10:28,361 - #5 const
INFO  23:10:28,361 - #50 char
INFO  23:10:28,361 - #50 ch1
INFO  23:10:28,361 - #7 =
INFO  23:10:28,361 - #52 a
INFO  23:10:28,362 - #6 ,
INFO  23:10:28,362 - #50 ch2
INFO  23:10:28,362 - #7 =
INFO  23:10:28,362 - #52 b
INFO  23:10:28,362 - #13 ;
INFO  23:10:28,362 - #50 int
INFO  23:10:28,362 - #50 x
INFO  23:10:28,362 - #8 [
INFO  23:10:28,362 - #9 ]
INFO  23:10:28,362 - #6 ,
INFO  23:10:28,362 - #50 y
INFO  23:10:28,362 - #6 ,
INFO  23:10:28,362 - #50 X
INFO  23:10:28,362 - #13 ;
INFO  23:10:28,362 - #5 const
INFO  23:10:28,362 - #50 int
INFO  23:10:28,362 - #50 z1
INFO  23:10:28,362 - #7 =
INFO  23:10:28,362 - #36 3
INFO  23:10:28,362 - #6 ,
INFO  23:10:28,362 - #50 z2
INFO  23:10:28,362 - #7 =
INFO  23:10:28,362 - #36 4
INFO  23:10:28,362 - #13 ;
INFO  23:10:28,362 - #28 class
INFO  23:10:28,362 - #50 A
INFO  23:10:28,363 - #3 {
INFO  23:10:28,363 - #4 }
INFO  23:10:28,363 - #5 const
INFO  23:10:28,363 - #50 bool
INFO  23:10:28,363 - #50 flag
INFO  23:10:28,363 - #7 =
INFO  23:10:28,363 - #53 false
INFO  23:10:28,363 - #13 ;
INFO  23:10:28,363 - #28 class
INFO  23:10:28,363 - #50 B
INFO  23:10:28,363 - #34 extends
INFO  23:10:28,363 - #50 A
INFO  23:10:28,363 - #3 {
INFO  23:10:28,363 - #50 int
INFO  23:10:28,363 - #50 xb
INFO  23:10:28,363 - #8 [
INFO  23:10:28,363 - #9 ]
INFO  23:10:28,363 - #13 ;
INFO  23:10:28,363 - #4 }
INFO  23:10:28,363 - #28 class
INFO  23:10:28,363 - #50 C
INFO  23:10:28,363 - #34 extends
INFO  23:10:28,363 - #50 B
INFO  23:10:28,363 - #3 {
INFO  23:10:28,363 - #50 char
INFO  23:10:28,363 - #50 xc
INFO  23:10:28,363 - #13 ;
INFO  23:10:28,363 - #3 {
INFO  23:10:28,363 - #50 int
INFO  23:10:28,363 - #50 getxc
INFO  23:10:28,363 - #10 (
INFO  23:10:28,364 - #11 )
INFO  23:10:28,364 - #3 {
INFO  23:10:28,364 - #26 return
INFO  23:10:28,364 - #36 1
INFO  23:10:28,364 - #13 ;
INFO  23:10:28,364 - #4 }
INFO  23:10:28,364 - #12 void
INFO  23:10:28,364 - #50 foo
INFO  23:10:28,364 - #10 (
INFO  23:10:28,364 - #11 )
INFO  23:10:28,364 - #3 {
INFO  23:10:28,364 - #4 }
INFO  23:10:28,364 - #50 int
INFO  23:10:28,364 - #50 f1
INFO  23:10:28,364 - #10 (
INFO  23:10:28,364 - #50 int
INFO  23:10:28,364 - #50 param1
INFO  23:10:28,364 - #11 )
INFO  23:10:28,364 - #3 {
INFO  23:10:28,364 - #26 return
INFO  23:10:28,364 - #50 param1
INFO  23:10:28,364 - #13 ;
INFO  23:10:28,364 - #4 }
INFO  23:10:28,364 - #12 void
INFO  23:10:28,364 - #50 f2
INFO  23:10:28,364 - #10 (
INFO  23:10:28,364 - #50 int
INFO  23:10:28,364 - #50 params
INFO  23:10:28,364 - #8 [
INFO  23:10:28,364 - #9 ]
INFO  23:10:28,364 - #6 ,
INFO  23:10:28,364 - #50 char
INFO  23:10:28,364 - #50 param2
INFO  23:10:28,364 - #11 )
INFO  23:10:28,364 - #50 int
INFO  23:10:28,364 - #50 f2a
INFO  23:10:28,364 - #13 ;
INFO  23:10:28,364 - #3 {
INFO  23:10:28,364 - #4 }
INFO  23:10:28,364 - #4 }
INFO  23:10:28,364 - #4 }
INFO  23:10:28,365 - #3 {
INFO  23:10:28,365 - #12 void
INFO  23:10:28,365 - #50 main
INFO  23:10:28,365 - #10 (
INFO  23:10:28,365 - #11 )
INFO  23:10:28,365 - #3 {
INFO  23:10:28,365 - #50 y
INFO  23:10:28,365 - #7 =
INFO  23:10:28,365 - #23 %
INFO  23:10:28,365 - #36 2
INFO  23:10:28,365 - #13 ;
INFO  23:10:28,365 - #4 }
INFO  23:10:28,365 - #4 }
