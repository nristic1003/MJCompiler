// generated with ast extension for cup
// version 0.8
// 29/5/2021 22:43:56


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(StartingIf StartingIf);
    public void visit(ListOfStatements ListOfStatements);
    public void visit(OptDesingExpr OptDesingExpr);
    public void visit(SingleFormParam SingleFormParam);
    public void visit(Mulop Mulop);
    public void visit(SingleConst SingleConst);
    public void visit(Relop Relop);
    public void visit(TypeOfMethod TypeOfMethod);
    public void visit(Addop Addop);
    public void visit(ListOfVars ListOfVars);
    public void visit(Factor Factor);
    public void visit(OptionMinus OptionMinus);
    public void visit(CondTerm CondTerm);
    public void visit(SingleTerm SingleTerm);
    public void visit(RparenIf RparenIf);
    public void visit(ListOfTerms ListOfTerms);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Condition Condition);
    public void visit(OptElse OptElse);
    public void visit(ListConst ListConst);
    public void visit(IfConditions IfConditions);
    public void visit(ElseStatement ElseStatement);
    public void visit(OptNumConst OptNumConst);
    public void visit(DecItem DecItem);
    public void visit(Expr Expr);
    public void visit(OptionSquare OptionSquare);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(OptRelOp OptRelOp);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptFormParams OptFormParams);
    public void visit(ListVarDecl ListVarDecl);
    public void visit(FormPars FormPars);
    public void visit(OptionalElse OptionalElse);
    public void visit(DivOperation DivOperation);
    public void visit(ModOperation ModOperation);
    public void visit(MulOperation MulOperation);
    public void visit(Assignop Assignop);
    public void visit(MinusOperator MinusOperator);
    public void visit(PlusOperator PlusOperator);
    public void visit(DessignatorArr DessignatorArr);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumFactor NumFactor);
    public void visit(DesignFactor DesignFactor);
    public void visit(SingleFactor SingleFactor);
    public void visit(MultipleFactors MultipleFactors);
    public void visit(OneTerm OneTerm);
    public void visit(MultipleTerms MultipleTerms);
    public void visit(NoMinus NoMinus);
    public void visit(MinusExpr MinusExpr);
    public void visit(SingleExpr SingleExpr);
    public void visit(DesignatorMM DesignatorMM);
    public void visit(DesignatorPP DesignatorPP);
    public void visit(AssignDesign AssignDesign);
    public void visit(LEQRelOp LEQRelOp);
    public void visit(LowerRelOp LowerRelOp);
    public void visit(GEQRelOp GEQRelOp);
    public void visit(GreaterRelOp GreaterRelOp);
    public void visit(NotSameRelOp NotSameRelOp);
    public void visit(SameRelOp SameRelOp);
    public void visit(OneCondFact OneCondFact);
    public void visit(MultipleOperators MultipleOperators);
    public void visit(ElseKeyword ElseKeyword);
    public void visit(CondIf CondIf);
    public void visit(MatchedStatementElseFix MatchedStatementElseFix);
    public void visit(FixUnmatched FixUnmatched);
    public void visit(FixMatched FixMatched);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(IfWithoutElse IfWithoutElse);
    public void visit(IfStatement IfStatement);
    public void visit(PrintStatementWArgs PrintStatementWArgs);
    public void visit(PrintStatementNoArg PrintStatementNoArg);
    public void visit(ReadStatement ReadStatement);
    public void visit(DesStatement DesStatement);
    public void visit(Type Type);
    public void visit(NoStatements NoStatements);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(NoMethodvars NoMethodvars);
    public void visit(MultipleVars MultipleVars);
    public void visit(MethodName MethodName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethods NoMethods);
    public void visit(ListOfMethods ListOfMethods);
    public void visit(NoArray NoArray);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(SingleVar SingleVar);
    public void visit(SinVar SinVar);
    public void visit(VarList VarList);
    public void visit(VarDeclError VarDeclError);
    public void visit(SingleV SingleV);
    public void visit(SingleBoolConst SingleBoolConst);
    public void visit(SingleCharConst SingleCharConst);
    public void visit(SingleNumConst SingleNumConst);
    public void visit(OneConst OneConst);
    public void visit(MultipleConst MultipleConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(Var Var);
    public void visit(Constant Constant);
    public void visit(NoDecList NoDecList);
    public void visit(DecListItems DecListItems);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
